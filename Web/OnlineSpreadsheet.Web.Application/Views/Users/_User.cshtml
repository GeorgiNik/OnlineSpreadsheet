@model OnlineSpreadsheet.Web.ViewModels.Users.UserVM

<div class="modal-body">
    <div id="validation-result"></div>
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        @Html.LabelFor(m => m.Name, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Name)
            @Html.ValidationMessageFor(m => m.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Title, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Title)
            @Html.ValidationMessageFor(m => m.Title)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.UserRoleName, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @(Html.Kendo().DropDownList()
                .Name("UserRoleID")
                .DataValueField("ID")
                .DataTextField("Name")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("UserRoles", "Dropdowns");
                    });
                })
                .HtmlAttributes(new { style = "width:100%" })
            )
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Email)
            @Html.ValidationMessageFor(m => m.Email)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Phone, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.EditorFor(m => m.Phone)
            @Html.ValidationMessageFor(m => m.Phone)
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.EntityStatus, new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @(Html.Kendo().DropDownList()
                .Name("EntityStatus")
                .DataValueField("ID")
                .DataTextField("Name")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("EntityStates", "Dropdowns");
                    });
                })
                .SelectedIndex((int)Model.EntityStatus - 1)
                .HtmlAttributes(new { style = "width:100%" })
            )
        </div>
    </div>

    <hr class="delimiter" />
    <button type="submit" id="btn-save" class="btn btn-primary">@Resources.Save.ToUpper()</button>
    <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Discard</button>
</div>

@Scripts.Render(Bundles.ModalValidation)
