@if (ViewBag.User.HasAccess(AccessRequest.UserRolesRead))
{
    @Html.Partial("_DeleteTemplate")

    @Scripts.Render(Bundles.KendoGridFunctions)
    @(
    Html.Kendo().Grid<LibertyGlobalBP.Web.ViewModels.UserRoles.UserRoleVM>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Template(t => t.ID).ClientTemplate(" ").HtmlAttributes(new { @class = "text-center row-numbers" }).Title("#").Width(15);
            columns.Bound(c => c.Name)
                .Filterable(f => f.Multi(true).Search(true));

            if (ViewBag.User.HasAccess(AccessRequest.UserRolesEdit))
            {
                columns.Bound(c => c.ID)
                    .Title(string.Empty)
                    .Filterable(false)
                    .ClientTemplate("<a data-ajax='true' data-ajax-mode='replace' data-ajax-update='\\#modal-container' class='modal-link k-button' href='/UserRoles/Edit/#=ID#'><i class='fa fa-lg fa-pencil'></i></a>")
                    .Width(40);
                columns.Command(command => command.Custom("Delete").Click("confirmDelete").Text("<i class='fa fa-lg fa-trash-o'></i>")).Width(40);
            }
        })
        .ToolBar(toolbar =>
        {
            if (ViewBag.User.HasAccess(AccessRequest.UserRolesEdit))
            {
                toolbar.Template(@<text>
            <span class="grid-manage-label">@Resources.ManageUserRoles</span>
            <div class="input-group grid-search">
                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                <input type="text" name="searchbox" class="form-control" id="searchbox" placeholder="@Resources.Search" />
            </div>
            <a data-ajax="true" data-ajax-mode="replace" data-ajax-update="#modal-container" class="modal-link k-button k-grid-add" href="/UserRoles/Create"> @Resources.AddUserRole</a>
                </text>);
            }
        })
        .Pageable(p => p.PageSizes(new int[] { 10, 20, 50 }))
        .Sortable(sortable =>
        {
            sortable.SortMode(GridSortMode.SingleColumn);
        })
        .Filterable(f => f.Extra(false))
        .DataSource(dataSource => dataSource
            .Ajax()
            .ServerOperation(false)
            .PageSize(10)
            .Model(model =>
            {
                model.Id(p => p.ID);
            })
            .Read(read => read.Action("UserRoles_Read", "UserRoles"))
            .Destroy(destroy => destroy.Action("UserRoles_Destroy", "UserRoles"))
        )
    )

    @Scripts.Render(Bundles.KendoPopupFunctionBindings)
    @Scripts.Render("~/bundles/rolesIndex")
}